version: '3.8'

services:

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: kubera-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=sqlite:///app/data/kubera.db
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
      - CORS_ORIGINS=https://${DOMAIN_NAME},https://www.${DOMAIN_NAME}
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backup:/app/backup
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kubera-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_URL=https://${DOMAIN_NAME}/api
        - REACT_APP_ENVIRONMENT=production
    container_name: kubera-frontend
    restart: unless-stopped
    volumes:
      - frontend_build:/usr/share/nginx/html
    networks:
      - kubera-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kubera-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - frontend_build:/usr/share/nginx/html:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - kubera-network

  # Database Backup Service
  db-backup:
    image: alpine:latest
    container_name: kubera-backup
    restart: "no"
    volumes:
      - ./data:/data:ro
      - ./backup:/backup
      - ./scripts:/scripts:ro
    networks:
      - kubera-network
    command: /scripts/sqlite-backup.sh
    profiles:
      - backup

volumes:
  frontend_build:
    driver: local

networks:
  kubera-network:
    driver: bridge 